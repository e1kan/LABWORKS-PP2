#1 - check if a movie has a score > 5.5
def check_score1(movie_name):
    for movie in movies:
        if movie["name"] == movie_name:
            if movie.get("imdb", 0) > 5.5:
                return True
            else:
                return False
    return "Movie isn't found"
#-----alternative as lambda:
check_score2 = lambda movie: movie["imdb"] > 5.5


#2 - return movies with score > 5.5
def only_good_scores1(dict):
    goodmovies = []
    for movie in movies:
        if movie.get("imdb", 0) > 5.5:
            goodmovies.append(movie.get("name", ""))
    return goodmovies
#-----alternative as lambda:
only_good_scores2 = lambda movies: [movie["name"] for movie in movies if movie["imdb"] > 5.5]


#3 - return all movies of given category
def category1(category_name):
    categorymovies = []
    for movie in movies:
        if movie.get("category", "") == category_name:
            categorymovies.append(movie.get("name", ""))
    return categorymovies
#-----alternative as lambda:
category2 = lambda movies, category: [movie["name"] for movie in movies if movie["category"] == category]


#4 - take a list of movies and print its average score
def avgscore_list(list):
    total = 0
    num_movies = 0
    for x in list:
        for movie in movies:
            if movie["name"] == x:
                total += movie["imdb"]
                num_movies += 1
                break

    avg = total / num_movies
    return avg


#5 - choose category and print its average score
def avgscore_category(category_name):
    categorymovies = []
    for movie in movies:
        if movie.get("category", "") == category_name:
            categorymovies.append(movie.get("imdb", 0))
    imdb = sum(categorymovies) / len(categorymovies)
    return imdb



#Dictionary of movies
movies = [
{
"name": "Usual Suspects",
"imdb": 7.0,
"category": "Thriller"
},
{
"name": "Hitman",
"imdb": 6.3,
"category": "Action"
},
{
"name": "Dark Knight",
"imdb": 9.0,
"category": "Adventure"
},
{
"name": "The Help",
"imdb": 8.0,
"category": "Drama"
},
{
"name": "The Choice",
"imdb": 6.2,
"category": "Romance"
},
{
"name": "Colonia",
"imdb": 7.4,
"category": "Romance"
},
{
"name": "Love",
"imdb": 6.0,
"category": "Romance"
},
{
"name": "Bride Wars",
"imdb": 5.4,
"category": "Romance"
},
{
"name": "AlphaJet",
"imdb": 3.2,
"category": "War"
},
{
"name": "Ringing Crime",
"imdb": 4.0,
"category": "Crime"
},
{
"name": "Joking muck",
"imdb": 7.2,
"category": "Comedy"
},
{
"name": "What is the name",
"imdb": 9.2,
"category": "Suspense"
},
{
"name": "Detective",
"imdb": 7.0,
"category": "Suspense"
},
{
"name": "Exam",
"imdb": 4.2,
"category": "Thriller"
},
{
"name": "We Two",
"imdb": 7.2,
"category": "Romance"
}
]

print("Enter 0 to stop. Be careful when writing the movies' names!")
list = []
while True:
    x = input()
    list.append(x)
    if x == '0':
        break
print(avgscore_list(list))

#normal functions:
mname = input("Enter the movie name: ")
print(check_score1(mname))

print(only_good_scores1(movies))

cname = input("Enter category: ")
print(category1(cname))

cname = input("Enter category: ")
print(avgscore_category(cname))



#lambda functions:
print(check_score2(movies[5]))
print(only_good_scores2(movies))
print(category2(movies, "Suspense"))
